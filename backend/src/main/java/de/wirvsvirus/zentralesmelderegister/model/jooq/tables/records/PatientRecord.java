/*
 * This file is generated by jOOQ.
 */
package de.wirvsvirus.zentralesmelderegister.model.jooq.tables.records;


import de.wirvsvirus.zentralesmelderegister.model.jooq.tables.Patient;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientRecord extends UpdatableRecordImpl<PatientRecord> implements Record4<Long, OffsetDateTime, Long, Long> {

    private static final long serialVersionUID = -324125535;

    /**
     * Setter for <code>public.patient.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.patient.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.patient.birthday</code>.
     */
    public void setBirthday(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.patient.birthday</code>.
     */
    public OffsetDateTime getBirthday() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.patient.city_id</code>.
     */
    public void setCityId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.patient.city_id</code>.
     */
    public Long getCityId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.patient.user_account_id</code>.
     */
    public void setUserAccountId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.patient.user_account_id</code>.
     */
    public Long getUserAccountId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, OffsetDateTime, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, OffsetDateTime, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Patient.PATIENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field2() {
        return Patient.PATIENT.BIRTHDAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Patient.PATIENT.CITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Patient.PATIENT.USER_ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component2() {
        return getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getCityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getUserAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value2() {
        return getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getCityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getUserAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value2(OffsetDateTime value) {
        setBirthday(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value3(Long value) {
        setCityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value4(Long value) {
        setUserAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord values(Long value1, OffsetDateTime value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PatientRecord
     */
    public PatientRecord() {
        super(Patient.PATIENT);
    }

    /**
     * Create a detached, initialised PatientRecord
     */
    public PatientRecord(Long id, OffsetDateTime birthday, Long cityId, Long userAccountId) {
        super(Patient.PATIENT);

        set(0, id);
        set(1, birthday);
        set(2, cityId);
        set(3, userAccountId);
    }
}
